package templates

var ServiceDotGo = `// Code generated by Micro. DO NOT EDIT.
package {{ .ServiceLowerName }}

import (
	_micro_handle_info "github.com/markity/micro/handleinfo"
	{{- range .ImportPaths }}
	{{ .Alias }} {{ .ImportPath }}
	{{- end }}
)

var serviceMethods = map[string]_micro_handle_info.HandleInfo{
	{{- range .AllMethods }}
	"{{ .RawName }}": {
		Name: "{{ .RawName }}",
		Type: _micro_handle_info.PROTO_TO_PROTO,
		Request: &{{ .ArgStructStr }}{},
		Response: &{{ .ResStructStr }}{},
	},
	{{- end}}
}
`

var ServerDotGo = `
// Code generated by Micro. DO NOT EDIT.
package {{ .ServiceLowerName }}

import (
	"context"
	_micro_errcode "github.com/markity/micro/errcode"
	{{- range .ImportPaths }}
	{{ .Alias }} {{ .ImportPath }}
	{{- end }}
)

type {{ .ServiceNameFirstCharUpper }} interface {
	{{- range .AllMethods }}
	{{ .RawName }}(ctx context.Context, req *{{ .ArgStructStr }}) (resp *{{.ResStructStr}}, errcode *_micro_errcode.ErrCode)
	{{- end}}
}

type UnimplementedService struct {}

{{- range .AllMethods }}
func (svc *UnimplementedService) {{ .RawName }}(ctx context.Context, req *{{ .ArgStructStr }}) (resp *{{.ResStructStr}}, errcode *_micro_errcode.ErrCode) {
	return nil, &_micro_errcode.ErrCode{
		Code: 404,
		Msg: "unimplemented",
		Data: nil,
	}
}
{{- end}}
`
